---
- name: Deploy app
  hosts: localhost
  connection: local
  vars:
    default_container_name: antifraud-02
    default_container_image: docker.io/v1v1v/anti-fraud
    version: 0.0.1-SNAPSHOT
    port_container: 28081

  tasks:
    - name: Log into DockerHub
      docker_login:
        username: "{{ docker_user }}"
        password: "{{ docker_password }}"
        registry_url: https://index.docker.io/v1/

    - name: Pull Docker image
      docker_image:
        name: "{{ default_container_image }}:{{ version }}"
        source: pull

    - name: Spin up antifraud service
      docker_container:
        name: "{{ default_container_name }}"
        image: "{{ default_container_image }}:{{ version }}"
        state: started
        recreate: yes
        ports:
          - "{{ port_container }}:8080"
        networks:
          - name: infra_default
        env:
          OTEL_SERVICE_NAME: "{{ default_container_name }}"

    - name: Healtcheck
      uri:
        url: "http://antifraud-02.example.com:28081/healthcheck"
      retries: 10
      delay: 5
      register: _result
      until: _result.status == 200

    - name: Update annotation
      uri:
        url: http://kibana:5601/api/apm/services/{{ item.name }}/annotation
        method: POST
        body_format: json
        body: "{\"@timestamp\": \"{{ ansible_date_time.iso8601 }}\",\"service\": {\"version\": \"{{ version }}\"},\"message\": \"Deployment {{ version }}\"}"
        headers:
          kbn-xsrf: true
        force_basic_auth: true
        url_username: "{{ kibana_user }}"
        url_password: "{{ kibana_password }}"
      loop:
        - { name: "antifraud-01", port: '28080' }
        - { name: "antifraud-02", port: '28081' }

    - name: Healtcheck
      uri:
        url: "http://{{ item.name }}.example.com:{{ item.port }}/healthcheck"
      retries: 5
      loop:
        - { name: "antifraud-01", port: '28080' }
        - { name: "antifraud-02", port: '28081' }
