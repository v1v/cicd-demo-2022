jenkins:
  systemMessage: "Configured automatically with JCasC plugin"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  labelString: flyweight
  mode: EXCLUSIVE
  numExecutors: 5
  remotingSecurity:
    enabled: false
  scmCheckoutRetryCount: 2
  nodes:
  - permanent:
      labelString: "local linux"
      launcher:
        jnlp:
          workDirSettings:
            disabled: true
            failIfWorkDirIsMissing: false
            internalDir: "remoting"
            workDirPath: "/tmp/worker"
      name: "local"
      numExecutors: 3
      remoteFS: "/tmp/worker"
      retentionStrategy: "always"
unclassified:
  openTelemetry:
    authentication: "noAuthentication"
    endpoint: "http://otel-collector:4317"
    exportOtelConfigurationAsEnvironmentVariables: true  # Note that OpenTelemetry credentials, if configured, will be exposed as environment variables
    observabilityBackends:
    - elastic:
        displayKibanaDashboardLink: true
        kibanaBaseUrl: "http://kibana:5601"
        name: "Elastic Observability"
        elasticLogsBackend:
          elasticLogsBackendWithJenkinsVisualization:
            elasticsearchCredentialsId: "elasticsearch-logs"
            elasticsearchUrl: "http://elasticsearch:9200"
  slackNotifier:
    botUser: true
    room: "cicd"
    sendAsText: false
    slackUserIdResolver: "no"
    teamDomain: "elastic"
    tokenCredentialId: "slack"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: GitHub user @${github_username} User + Personal Access Token
              id: GitHubUserAndToken
              password: ${github_personal_access_token}
              scope: GLOBAL
              username: ${github_username}
          - usernamePassword:
              description: Docker user @${docker_user} User + Token
              id: DockerUserAndToken
              password: ${docker_token}
              scope: GLOBAL
              username: ${docker_user}
          - usernamePassword:
              description: Docker user @${docker_user} User + Token
              id: docker.io
              password: ${docker_token}
              scope: GLOBAL
              username: ${docker_user}
          - string:
              description: snyk.io token.
              id: snyk.io
              scope: GLOBAL
              secret: ${snyk}
          - string:
              description: slack bot token.
              id: slack
              scope: GLOBAL
              secret: ${slack}
          - string:
              description: github token.
              id: github
              scope: GLOBAL
              secret: "ghp_1vtsSzBlFjbQm7cs21o3CloSHBzVyk1gU7ab"
          - usernamePassword:
              description: "elasticsearch-logs"
              id: "elasticsearch-logs"
              password: "changeme"
              scope: GLOBAL
              username: "admin"

jobs:
  - file: "/var/jenkins_home/config/folder.dsl"
  - file: "/var/jenkins_home/config/antifraud.dsl"
  - file: "/var/jenkins_home/config/build-deploy-antifraud.dsl"
  - file: "/var/jenkins_home/config/deploy-antifraud.dsl"
  - file: "/var/jenkins_home/config/generate-load.dsl"
